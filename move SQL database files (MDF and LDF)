DECLARE @dbname NVARCHAR(128) = N'stackoverflow2013'; -- Replace with your database name  
DECLARE @newLocation NVARCHAR(260) = N'D:'; -- New directory for file location  
-- Uncomment the above two to debug  
DECLARE @detachCmd NVARCHAR(MAX) = N'';  
DECLARE @attachCmd NVARCHAR(MAX) = N'';  
DECLARE @counter INT = 1; -- Initialize counter for filename numbering

-- Step 2: Extract logical names and current physical paths  
DECLARE @files TABLE (  
    logical_name NVARCHAR(128),  
    physical_name NVARCHAR(260)  
);  
  
INSERT INTO @files (logical_name, physical_name)  
SELECT name, physical_name  
FROM sys.master_files  
WHERE database_id = DB_ID(@dbname);  
   
-- Step 3: Generate the detach command  
SET @detachCmd = N'ALTER DATABASE ' + QUOTENAME(@dbname) + ' SET SINGLE_USER WITH ROLLBACK IMMEDIATE;' + CHAR(13) +  
                 N'EXEC sp_detach_db @dbname = N''' + @dbname + ''';';  
  
-- Step 4: Generate the attach command with placeholders for new paths  
SET @attachCmd = N'EXEC sp_attach_db @dbname = N''' + @dbname + '''';  
  
-- Append each file's new path to the command with logical names
SELECT @attachCmd = @attachCmd + N', @filename' + CAST(@counter AS NVARCHAR(10)) + N' = N''' + @newLocation + '\' + RIGHT(physical_name, CHARINDEX('\', REVERSE(physical_name)) - 1) + '''',
       @counter = @counter + 1
FROM @files;  
  
SET @attachCmd = @attachCmd + ';' + CHAR(13) +  
                 N'ALTER DATABASE ' + QUOTENAME(@dbname) + ' SET MULTI_USER;';  
  
-- Step 5: Output the detach, move, and attach commands  
PRINT '--- Detach Command ---';  
PRINT @detachCmd;  
PRINT CHAR(13);  
  
PRINT '--- Manual File Movement ---';  
PRINT '-- Proceed to Manually move the Files';  
PRINT CHAR(13);  
  
PRINT '--- Attach Command ---';  
PRINT @attachCmd 

Print '
  -- If you encounter ' + '"Operating system error 5: 5(Access is denied.)" error, ' + 
'
-- Grant the SQL Logon Account (from configuration manager) the necessary permissions to access the disk.
-- Then, bring the database back ONLINE'
